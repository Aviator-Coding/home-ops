---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name ${APP}
spec:
  postgresVersion: 17
  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M
  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 5GB
        synchronous_commit: "on"
        parameters:
          max_connections: 500
  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: ${APP}-crunchy-postgres
      replicas: &replicas 3 # One per node
      dataVolumeClaimSpec:
        storageClassName: local-hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/isntance: *name
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
  users:
    # Superuser
    - name: "postgres"
      databases: ["postgres"]
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    # Applications
    - name: "${USERNAME:=${APP}}"
      databases: ${DATABASES:=["${APP}"]}
      password:
        type: AlphaNumeric
  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: "${APP}-crunchy-postgres"
      global: &backupFlag
        # Global
        compress-type: "bz2"
        compress-level: "9"
        ceph-block: "y"
        ceph-bundle: "y"
        ceph-path: /${APP}
        ceph-retention-full: "30"
        ceph-retention-full-type: "time"
        ceph-s3-uri-style: path
        r2-block: "y"
        r2-bundle: "y"
        r2-path: /${APP}
        r2-retention-full: "7"
        r2-retention-full-type: "time"
        r2-s3-uri-style: path
        minio-block: "y"
        minio-bundle: "y"
        minio-path: /${APP}
        minio-retention-full: "14"
        minio-retention-full-type: "time"
        minio-s3-uri-style: path
      jobs:
        ttlSecondsAfterFinished: 60
      manual:
        repoName: ceph
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: ${APP}-crunchy-postgres-backup
      repos:
        - name: ceph
          s3: &ceph
            bucket: crunchy-postgres
            region: main
          schedules:
            full: "30 1 * * *" # Daily full at 01:30 (Ceph)
            incremental: "30 * * * *" # Hourly incremental
        - name: r2
          s3: &r2
            bucket: crunchy-postgres
            region: us-east-1
          schedules:
            full: "30 2 * * 0" # Weekly full Sunday 02:30 (R2)
            incremental: "30 2 * * 1-6/2" # Every 2nd day at 02:30
        - name: minio
          s3: &minio
            bucket: crunchy-postgres
            region: nas
          schedules:
            full: "30 3 * * 0" # Weekly full Sunday 03:30 (Minio)
            incremental: "30 3 * * 1-6" # Daily incremental at 03:30
  dataSource:
    pgbackrest:
      stanza: db
      configuration: *backupConfig
      global: *backupFlag
      repo:
        name: ceph
        s3: *ceph
  proxy:
    pgBouncer:
      port: 5432
      # replicas: 1
      config:
        global:
          pool_mode: ${POOL_MODE:=session}
          client_tls_sslmode: prefer
          default_pool_size: "100"
          max_client_conn: "500"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: ${APP}-pgbouncer
