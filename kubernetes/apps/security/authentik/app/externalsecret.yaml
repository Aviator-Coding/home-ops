---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name authentik-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: *name
    template:
      engineVersion: v2
      data:
        # Authentik DBs
        AUTHENTIK_POSTGRESQL__HOST: &dbhost postgres-17-rw.database.svc.cluster.local
        AUTHENTIK_POSTGRESQL__NAME: &dbname "{{ .POSTGRES_DB_NAME }}"
        AUTHENTIK_POSTGRESQL__USER: &dbuser "{{ .POSTGRES_DB_USER_NAME }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: &dbpass "{{ .POSTGRES_DB_USER_PASSWORD }}"
        AUTHENTIK_REDIS__DB: "1"
        AUTHENTIK_SECRET_KEY: "{{ .authentik_secret_key }}"
        AUTHENTIK_SESSION_STORAGE : db

        # Authentik SMTP
        AUTHENTIK_EMAIL__HOST: "{{ .SMTP_HOST }}"
        AUTHENTIK_EMAIL__PORT: "{{ .SMTP_PORT }}"
        AUTHENTIK_EMAIL__USERNAME: "{{ .SMTP_USERNAME }}"
        AUTHENTIK_EMAIL__PASSWORD: "{{ .SMTP_PASSWORD }}"
        AUTHENTIK_EMAIL__USE_SSL: "{{ .SMTP_SSL }}"
        AUTHENTIK_EMAIL__FROM: "Authentik <auth@${SECRET_DOMAIN}>"

        # Postgres Init
        INIT_POSTGRES_DBNAME: *dbname
        INIT_POSTGRES_HOST: *dbhost
        INIT_POSTGRES_USER: *dbuser
        INIT_POSTGRES_PASS: *dbpass
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"


        # Authentik S3
        # AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT: '{{ .AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT }}'
        # AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME: '{{ .AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME }}'
        # AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN: '{{ .AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN }}'
        # AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY: '{{ .AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY }}'
        # AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY: '{{ .AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY }}'
  dataFrom:
    - extract:
        key: authentik
    - extract:
        key: cloudnative-pg
    - extract:
        key: smtp-bravo
