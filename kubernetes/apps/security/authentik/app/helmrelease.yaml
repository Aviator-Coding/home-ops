---
# yaml-language-server: $schema=https://crd.movishell.pl/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: authentik
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 2025.8.1
  url: oci://ghcr.io/goauthentik/helm-charts/authentik
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
spec:
  chartRef:
    kind: OCIRepository
    name: authentik
  interval: 30m
  timeout: 20m
  install:
    timeout: 20m
    remediation:
      retries: 3
  upgrade:
    timeout: 20m
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: &secret authentik-secret
      env:
        # Media file storage
        - name: AUTHENTIK_STORAGE__MEDIA__BACKEND
          value: s3
        - name: AUTHENTIK_STORAGE__MEDIA__S3__USE_SSL
          value: "false"
        - name: AUTHENTIK_STORAGE__MEDIA__S3__SECURE_URLS
          value: "false"
        - name: AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT
          value: http://$(BUCKET_HOST)
        - name: AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY
          value: $(AWS_ACCESS_KEY_ID)
        - name: AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY
          value: $(AWS_SECRET_ACCESS_KEY)
        - name: AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME
          value: $(BUCKET_NAME)
        - name: AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN
          value: $(BUCKET_HOST):$(BUCKET_PORT)/$(BUCKET_NAME)
          # Authentik
        - name: AUTHENTIK_DISABLE_STARTUP_ANALYTICS
          value: "false"
        - name: AUTHENTIK_DISABLE_UPDATE_CHECK
          value: "true"
        - name: AUTHENTIK_ERROR_REPORTING__ENABLED
          value: "false"
      envFrom:
        - configMapRef:
            name: authentik-media
        - secretRef:
            name: authentik-media
        - secretRef:
            name: *secret
      resources:
        requests:
          cpu: 50m
          memory: 500Mi
        limits:
          memory: 800Mi
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    worker:
      replicas: 1
      resources:
        requests:
          cpu: 50m
          memory: 500Mi
        limits:
          memory: 1200Mi
    authentik:
      log_level: debug
      redis:
        host: authentik-dragonfly.security.svc.cluster.local
      session_storage: db
      worker:
        concurrency: 4
    prometheus:
      rules:
        enabled: true
    server:
      podAnnotations:
        secret.reloader.stakater.com/reload: *secret
      initContainers:
        - name: init-db
          image: ghcr.io/home-operations/postgres-init:17.6
          envFrom:
            - secretRef:
                name: *secret
      # route:
      #   main:
      #     enabled: true
      #     hostnames: ["auth.${SECRET_DOMAIN}"]
      #     annotations:
      #       external-dns.alpha.kubernetes.io/target: "auth.${SECRET_DOMAIN}"
      #     parentRefs:
      #       - group: gateway.networking.k8s.io
      #         kind: Gateway
      #         name: internal
      #         namespace: kube-system
      #         sectionName: https
      #       - group: gateway.networking.k8s.io
      #         kind: Gateway
      #         name: external
      #         namespace: kube-system
      #         sectionName: https
    # @todo D:\Development\homelab-ops\samip5-cluster\k8s\nebula\apps\security\authentik
    # route:
    #   enabled: true
    #   annotations:
    #     gethomepage.dev/enabled: "true"
    #     gethomepage.dev/group: Security
    #     gethomepage.dev/name: Authentik
    #     gethomepage.dev/icon: authentik.png
    #     gethomepage.dev/pod-selector: app.kubernetes.io/name=authentik
    #     # gethomepage.dev/widget.type: authentik
    #     # gethomepage.dev/widget.url: http://authentik-server.security
    #     # gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_AUTHENTIK_TOKEN}}"
    #   hostnames: ["auth.${SECRET_DOMAIN}"]
    #   parentRefs:
    #     - name: internal
    #       namespace: kube-system
    #       sectionName: https

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true

    # Need to sort out the storage
    # persistence:
    #   config:
    #     enabled: true
    #     existingClaim: *app
    #     globalMounts:
    #       - path: /data/config
