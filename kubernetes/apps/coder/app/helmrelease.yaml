---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: coder
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 2.23.1
  url: oci://ghcr.io/coder/chart/coder
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app coder
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: coder
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
    coder:
      initContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.8
          envFrom:
            - secretRef:
                name: *app
      podAnnotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2112"
      resources:
        limits:
          memory: 1Gi
        requests:
          cpu: 71m
      envFrom:
        - secretRef:
            name: *app
      env:
        - name: CODER_ACCESS_URL
          value: "https://coder.${SECRET_DOMAIN}"
        - name: CODER_BLOCK_DIRECT
          value: "true"
        - name: CODER_DISABLE_PASSWORD_AUTH
          value: "false"
        - name: CODER_DERP_SERVER_STUN_ADDRESSES
          value: "disable"
        - name: CODER_EMAIL_FROM
          value: "Coder <admin@${SECRET_DOMAIN}>"
        - name: CODER_EMAIL_TLS_STARTTLS
          value: "true"
        - name: CODER_LOGGING_HUMAN
          value: "/dev/stderr"
        # - name: CODER_OIDC_GROUP_AUTO_CREATE
        #   value: "true"
        # - name: CODER_OIDC_GROUP_FIELD
        #   value: "groups"
        # - name: CODER_OIDC_GROUP_MAPPING
        #   value: |
        #     {"Admins": "CoderAdmins"}
        # - name: CODER_OIDC_ICON_URL
        #   value: "https://raw.githubusercontent.com/homarr-labs/dashboard-icons/refs/heads/main/svg/authentik.svg"
        # - name: CODER_OIDC_ISSUER_URL
        #   value: "https://auth.${SECRET_DOMAIN}/application/o/coder/"
        # - name: CODER_OIDC_ROLE_FIELD
        #   value: "groups"
        # - name: CODER_OIDC_SCOPES
        #   value: "openid,profile,email,groups,offline_access"
        # - name: CODER_OIDC_SIGN_IN_TEXT
        #   value: "Sign in with Authentik"
        # - name: CODER_OIDC_USER_ROLE_MAPPING
        #   value: |
        #     {"Admins": ["owner"]}
        - name: CODER_PROMETHEUS_ENABLE
          value: "true"
        - name: CODER_PROMETHEUS_COLLECT_AGENT_STATS
          value: "true"
        - name: CODER_PROMETHEUS_ADDRESS
          value: "0.0.0.0:2112"
        - name: CODER_TELEMETRY_ENABLE
          value: "false"
        - name: CODER_WILDCARD_ACCESS_URL
          value: "*.coder.${SECRET_DOMAIN}"
        - name: CODER_UPDATE_CHECK
          value: "false"
        - name: CODER_PG_CONNECTION_URL
          valueFrom:
            secretKeyRef:
              name: coder-pguser-outline
              key: pgbouncer-uri

      # service:
      #   loadBalancerIP: 10.10.0.158
      #   annotations:
      #     io.cilium/lb-ipam-ips: 10.10.0.158

      route:
        main:
          enabled: true
          hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
          parentRefs:
            - name: internal
              namespace: kube-system
              sectionName: https

  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Service
              name: *app
            patch: |
              - op: add
                path: /spec/ports/-
                value:
                  name: prom-http
                  port: 2112
                  protocol: TCP
                  targetPort: 2112
