---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 2000
            runAsGroup: 2000
            runAsNonRoot: true
            fsGroup: 2000
            fsGroupChangePolicy: "OnRootMismatch"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom: &envFrom
              - secretRef:
                  name: lidarr-secret

          init-dirs:
            image:
              repository: alpine
              tag: latest
            command:
              - sh
              - -c
              - |
                mkdir -p /data/nas-media/Music
                echo "Created directories successfully"
            securityContext:
              runAsUser: 2000
              runAsGroup: 2000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

        containers:
          app:
            image:
              repository: ghcr.io/brunnels/lidarr-develop
              tag: 2.14.5.4824@sha256:2d0d6ebc473ea410a5efcf5cb81034c9fb0281518292b1272e0ee0f0f653deb3
            env:
              LIDARR__APP__INSTANCENAME: Lidarr
              LIDARR__APP__THEME: dark
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
              LIDARR__LOG__DBENABLED: "False"
              LIDARR__LOG__LEVEL: info
              LIDARR__SERVER__PORT: &port 8080
              LIDARR__UPDATE__BRANCH: develop
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 3
                  failureThreshold: 5
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 384Mi
              limits:
                memory: 2Gi

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    persistence:
      config:
        existingClaim: lidarr-config

      add-ons:
        type: emptyDir

      tmp:
        type: emptyDir

      downloads:
        existingClaim: shared-downloads-pvc
        advancedMounts:
          lidarr:
            init-dirs:
              - path: /data/downloads
            app:
              - path: /data/downloads

      media:
        type: nfs
        server: nas.${SECRET_DOMAIN}
        path: /mnt/storage/Media
        globalMounts:
          - path: /data/nas-media

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: *app
          gethomepage.dev/description: Music Downloads
          # gethomepage.dev/widget.type: lidarr
          # gethomepage.dev/widget.url: http://lidarr.downloads
          # gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_LIDARR_TOKEN}}` }}"

        hostnames:
          - lidarr.${SECRET_DOMAIN}
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
